workflows:
  vue-android:
    name: Vue Android
    max_build_duration: 30
    environment:
      node: latest
      vars:
        PACKAGE_NAME: "com.oxygetv.app"
    scripts:
      - name: Install dependencies
        script: |
          npm install
          npm install @capacitor/core @capacitor/cli @capacitor/android
      
      - name: Build Web
        script: |
          npm run build
          ls -la dist
      
      - name: Setup Android
        script: |
          rm -rf android
          npx cap init OxygeTV com.oxygetv.app --web-dir=dist
          npx cap add android
          npx cap sync
          echo "=== Android directory structure ==="
          ls -la android
          echo "=== App directory structure ==="
          ls -la android/app
          echo "=== Checking gradlew ==="
          if [ -f "android/gradlew" ]; then
            echo "gradlew found"
          else
            echo "gradlew not found!"
          fi
      
      - name: Generate keystore
        script: |
          keytool -genkey -v \
            -keystore keystore.jks \
            -keyalg RSA \
            -keysize 2048 \
            -validity 10000 \
            -alias upload \
            -storepass $CM_KEYSTORE_PASSWORD \
            -keypass $CM_KEY_PASSWORD \
            -dname "CN=OxygeTV, OU=Mobile, O=OxygeTV, L=Unknown, ST=Unknown, C=US" \
            -noprompt
      
      - name: Update Gradle Config
        script: |
          if [ -f "android/app/build.gradle" ]; then
            # Сначала сохраним оригинальный файл
            cp android/app/build.gradle android/app/build.gradle.bak
            
            # Создадим новый файл build.gradle
            cat > android/app/build.gradle << 'EOF'
apply plugin: 'com.android.application'

android {
    namespace "com.oxygetv.app"
    compileSdkVersion 33
    defaultConfig {
        applicationId "com.oxygetv.app"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file("../keystore.jks")
            storePassword System.getenv("CM_KEYSTORE_PASSWORD")
            keyAlias "upload"
            keyPassword System.getenv("CM_KEY_PASSWORD")
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation "androidx.core:core-ktx:1.9.0"
    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"
    implementation project(':capacitor-android')
    implementation project(':capacitor-cordova-android-plugins')
}
EOF

            echo "=== New build.gradle contents ==="
            cat android/app/build.gradle
          else
            echo "Error: build.gradle not found"
            exit 1
          fi
      
      - name: Build Android
        script: |
          echo "=== Android project structure ==="
          ls -R android/
          
          cd android
          if [ -f "gradlew" ]; then
            chmod +x gradlew
            ./gradlew tasks --all
            ./gradlew assembleRelease --stacktrace --info
          else
            echo "Error: gradlew not found"
            echo "=== Current directory contents ==="
            ls -la
            exit 1
          fi
    
    artifacts:
      - android/app/build/outputs/**/*.apk
    publishing:
      email:
        recipients:
          - rzl44610@bcooq.com